{#
/**
 * @file
 * Default theme implementation for a single field in a view.
 *
 * Available variables:
 * - view: The view that the field belongs to.
 * - field: The field handler that can process the input.
 * - row: The raw result of the database query that generated this field.
 * - output: The processed output that will normally be used.
 *
 * When fetching output from the row this construct should be used:
 * data = row[field.field_alias]
 *
 * The above will guarantee that you'll always get the correct data, regardless
 * of any changes in the aliasing that might happen if the view is modified.
 *
 * @see template_preprocess_views_view_field()
 *
 * @ingroup themeable
 */
#}


{% if output %}
	{% set value = (output|render|trim|number_format(2, '.', '')) %}
	{% set halves = (value * 2)|round(0, 'floor') %}   
	{% set full_stars = (halves // 2) %}               
	{% set half_star = halves % 2 %}                   
	{% set empty_stars = 5 - full_stars %}

	<div class="star-rating position-relative right-1px">
		<span class="z-2 position-relative">
			{% for i in 1..full_stars %}
				<i class="fas fa-star text-blue"></i>
			{% endfor %}
			{% if half_star %}
				<i class="fas fa-star-half text-blue"></i> 
			{% endif %}
		</span>
		<span class="empty-stars z-1 position-relative {{ half_star ? 'move-over' : 'dont-move-over' }}">
			{% for i in 1..empty_stars %}
				<i class="fas fa-star text-border"></i>  
			{% endfor %}
		</span>
	</div>

{% endif %}


{# {% set halves = (value * 2)|round(0, 'floor') %}   
{% set full_stars = (halves // 2) %}               
{% set half_star = halves % 2 %}                   
{% set empty_stars = 5 - full_stars - half_star %}

{{ full_stars }}
{{ half_star }} #}
